apiVersion: apps/v1
kind: Deployment
metadata:
  name: aviation-missions
  labels:
    app: aviation-missions
spec:
  replicas: 2
  selector:
    matchLabels:
      app: aviation-missions
  template:
    metadata:
      labels:
        app: aviation-missions
    spec:
      containers:
      - name: aviation-app
        image: your-registry/aviation-missions:latest
        ports:
        - containerPort: 3000
          name: web
        env:
        - name: PORT
          value: "3000"
        - name: DATABASE_URL
          value: "jdbc:h2:./data/aviation-missions"
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        volumeMounts:
        - name: data-storage
          mountPath: /app/data
        livenessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
      volumes:
      - name: data-storage
        persistentVolumeClaim:
          claimName: aviation-data-pvc

---
apiVersion: v1
kind: Service
metadata:
  name: aviation-missions-service
  labels:
    app: aviation-missions
spec:
  selector:
    app: aviation-missions
  ports:
  - name: web
    protocol: TCP
    port: 80
    targetPort: 3000
  type: LoadBalancer

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: aviation-data-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: aviation-missions-ingress
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
spec:
  tls:
  - hosts:
    - your-domain.com
    secretName: aviation-missions-tls
  rules:
  - host: your-domain.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: aviation-missions-service
            port:
              number: 80
