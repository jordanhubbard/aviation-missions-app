name: üîí Security Scanning

on:
  schedule:
    # Run security scans daily at 2 AM UTC
    - cron: '0 2 * * *'
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  # Dependency vulnerability scanning
  dependency-scan:
    name: üì¶ Dependency Security Scan
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Java
        uses: actions/setup-java@v5
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: '20'

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.m2
            frontend/node_modules
          key: ${{ runner.os }}-deps-${{ hashFiles('backend/project.clj', 'frontend/package-lock.json') }}

      - name: Install Leiningen
        run: |
          curl -O https://raw.githubusercontent.com/technomancy/leiningen/stable/bin/lein
          chmod +x lein
          sudo mv lein /usr/local/bin/

      - name: Install backend dependencies
        run: cd backend && lein deps

      - name: Install frontend dependencies
        run: cd frontend && npm ci

      - name: Run Trivy dependency scan
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'dependency-scan-results.sarif'

      - name: Upload dependency scan results
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'dependency-scan-results.sarif'

  # Secret scanning
  secret-scan:
    name: üïµÔ∏è Secret Scanning
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Run TruffleHog OSS
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          base: main
          head: HEAD
          extra_args: --debug --only-verified

  # License compliance
  license-scan:
    name: üìú License Compliance
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Java
        uses: actions/setup-java@v5
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: '20'

      - name: Install Leiningen
        run: |
          curl -O https://raw.githubusercontent.com/technomancy/leiningen/stable/bin/lein
          chmod +x lein
          sudo mv lein /usr/local/bin/

      - name: Check backend licenses
        run: |
          cd backend
          lein deps
          lein licenses

      - name: Check frontend licenses
        run: |
          cd frontend
          npm ci
          npx license-checker --summary

  # SAST (Static Application Security Testing)
  sast-scan:
    name: üîç SAST Analysis
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: javascript

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

  # Container security scanning
  container-scan:
    name: üê≥ Container Security Scan
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Build Docker image
        run: docker build -t aviation-missions:security-scan .

      - name: Run Trivy container scan
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'aviation-missions:security-scan'
          format: 'sarif'
          output: 'container-scan-results.sarif'

      - name: Upload container scan results
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'container-scan-results.sarif'

      - name: Run Docker security benchmark
        run: |
          docker run --rm -v /var/run/docker.sock:/var/run/docker.sock \
            -v $(pwd):/host \
            aquasec/docker-bench-security:latest \
            -c container_images -i aviation-missions:security-scan
